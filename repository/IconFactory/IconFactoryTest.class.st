Class {
	#name : #IconFactoryTest,
	#superclass : #TestCase,
	#instVars : [
		'factory'
	],
	#category : 'IconFactory'
}

{ #category : #'instance creation' }
IconFactoryTest >> exampleIcon [
	^ Form
		extent: 150 @ 150
		depth: 1
		bits:
			(Bitmap
				decompressFromByteArray:
					#[226 238 5 255 226 223 240 3 224 0 0 0 62 7 255 240 127 255 255 255 252 0 255 255 255 255 240 3 224 0 0 0 62 7 255 240 127 255 255 255 252 0 255 255 255 255 240 3 224 0 0 0 62 7 255 240 127 255 255 255 252 0 255 255 255 255 240 3 224 0 0 0 62 7 255 240 127 255 255 255 252 0 255 255 255 255 240 3 224 0 0 0 62 7 255 240 127 255 255 255 252 0 248 0 0 1 240 127 224 255 255 7 254 0 0 0 124 0 0 0 252 0 248 0 0 1 240 127 224 255 255 7 254 0 0 0 124 0 0 0 252 0 248 0 0 1 240 127 224 255 255 7 254 0 0 0 124 0 0 0 252 0 248 0 0 1 240 127 224 255 255 7 254 0 0 0 124 0 0 0 252 0 248 0 0 1 240 127 224 255 255 7 254 0 0 0 124 0 0 0 252 0 248 63 255 129 240 3 255 252 0 255 192 0 1 240 124 15 255 224 252 0 248 63 255 129 240 3 255 252 0 255 192 0 1 240 124 15 255 224 252 0 248 63 255 129 240 3 255 252 0 255 192 0 1 240 124 15 255 224 252 0 248 63 255 129 240 3 255 252 0 255 192 0 1 240 124 15 255 224 252 0 248 63 255 129 240 3 255 252 0 255 192 0 1 240 124 15 255 224 252 0 248 63 255 129 240 127 224 252 31 255 193 248 1 240 124 15 255 224 252 0 248 63 255 129 240 127 224 252 31 255 193 248 1 240 124 15 255 224 252 0 248 63 255 129 240 127 224 252 31 255 193 248 1 240 124 15 255 224 252 0 248 63 255 129 240 127 224 252 31 255 193 248 1 240 124 15 255 224 252 0 248 63 255 129 240 127 224 252 31 255 193 248 1 240 124 15 255 224 252 0 248 63 255 129 240 0 31 3 224 248 62 0 63 240 124 15 255 224 252 0 248 63 255 129 240 0 31 3 224 248 62 0 63 240 124 15 255 224 252 0 248 63 255 129 240 0 31 3 224 248 62 0 63 240 124 15 255 224 252 0 248 63 255 129 240 0 31 3 224 248 62 0 63 240 124 15 255 224 252 0 248 63 255 129 240 0 31 3 224 248 62 0 63 240 124 15 255 224 252 0 248 0 0 1 240 124 31 0 0 255 193 255 193 240 124 0 0 0 252 0 248 0 0 1 240 124 31 0 0 255 193 255 193 240 124 0 0 0 252 0 248 0 0 1 240 124 31 0 0 255 193 255 193 240 124 0 0 0 252 0 248 0 0 1 240 124 31 0 0 255 193 255 193 240 124 0 0 0 252 0 248 0 0 1 240 124 31 0 0 255 193 255 193 240 124 0 0 0 252 0 248 0 0 1 240 124 31 0 0 255 193 255 193 240 124 0 0 0 252 0 255 255 255 255 240 124 31 3 224 248 62 7 193 240 127 255 255 255 252 0 255 255 255 255 240 124 31 3 224 248 62 7 193 240 127 255 255 255 252 0 255 255 255 255 240 124 31 3 224 248 62 7 193 240 127 255 255 255 252 0 255 255 255 255 240 124 31 3 224 248 62 7 193 240 127 255 255 255 252 0 255 255 255 255 240 124 31 3 224 248 62 7 193 240 127 255 255 255 252 0 0 0 0 0 0 0 0 3 224 0 62 7 193 240 0 0 9 0 15 0 0 0 3 224 0 62 7 193 240 0 0 9 0 15 0 0 0 3 224 0 62 7 193 240 0 0 9 0 15 0 0 0 3 224 0 62 7 193 240 0 0 9 0 232 151 0 0 0 3 224 0 62 7 193 240 0 0 0 0 0 0 255 255 255 129 255 255 255 3 255 255 193 248 0 15 131 240 124 31 0 0 255 255 255 129 255 255 255 3 255 255 193 248 0 15 131 240 124 31 0 0 255 255 255 129 255 255 255 3 255 255 193 248 0 15 131 240 124 31 0 0 255 255 255 129 255 255 255 3 255 255 193 248 0 15 131 240 124 31 0 0 255 255 255 129 255 255 255 3 255 255 193 248 0 15 131 240 124 31 0 0 7 193 255 128 15 255 224 0 31 0 62 0 63 240 127 255 128 0 252 0 7 193 255 128 15 255 224 0 31 0 62 0 63 240 127 255 128 0 252 0 7 193 255 128 15 255 224 0 31 0 62 0 63 240 127 255 128 0 252 0 7 193 255 128 15 255 224 0 31 0 62 0 63 240 127 255 128 0 252 0 7 193 255 128 15 255 224 0 31 0 62 0 63 240 127 255 128 0 252 0 255 255 255 129 255 131 224 255 255 255 192 0 0 0 0 15 128 0 0 0 255 255 255 129 255 131 224 255 255 255 192 0 0 0 0 15 128 0 0 0 255 255 255 129 255 131 224 255 255 255 192 0 0 0 0 15 128 0 0 0 255 255 255 129 255 131 224 255 255 255 192 0 0 0 0 15 128 0 0 0 255 255 255 129 255 131 224 255 255 255 192 0 0 0 0 15 128 0 0 0 248 1 240 126 0 3 255 252 0 248 62 0 0 0 0 0 124 31 0 0 248 1 240 126 0 3 255 252 0 248 62 0 0 0 0 0 124 31 0 0 248 1 240 126 0 3 255 252 0 248 62 0 0 0 0 0 124 31 0 0 248 1 240 126 0 3 255 252 0 248 62 0 0 0 0 0 124 31 0 0 248 1 240 126 0 3 255 252 0 248 62 0 0 0 0 0 124 31 0 0 248 1 240 126 0 3 255 252 0 248 62 0 0 0 0 0 124 31 0 0 7 193 240 1 240 3 224 252 31 248 1 248 1 240 0 0 127 224 0 0 7 193 240 1 240 3 224 252 31 248 1 248 1 240 0 0 127 224 0 0 7 193 240 1 240 3 224 252 31 248 1 248 1 240 0 0 127 224 0 0 7 193 240 1 240 3 224 252 31 248 1 248 1 240 0 0 127 224 0 0 7 193 240 1 240 3 224 252 31 248 1 248 1 240 0 0 127 224 0 0 248 62 0 0 15 252 31 3 224 248 63 255 255 255 255 255 128 0 252 0 248 62 0 0 15 252 31 3 224 248 63 255 255 255 255 255 128 0 252 0 248 62 0 0 15 252 31 3 224 248 63 255 255 255 255 255 128 0 252 0 248 62 0 0 15 252 31 3 224 248 63 255 255 255 255 255 128 0 252 0 248 62 0 0 15 252 31 3 224 248 63 255 255 255 255 255 128 0 252 0 255 254 15 129 240 3 224 0 31 7 254 7 193 255 128 15 255 224 0 0 255 254 15 129 240 3 224 0 31 7 254 7 193 255 128 15 255 224 0 0 255 254 15 129 240 3 224 0 31 7 254 7 193 255 128 15 255 224 0 0 255 254 15 129 240 3 224 0 31 7 254 7 193 255 128 15 255 224 0 0 255 254 15 129 240 3 224 0 31 7 254 7 193 255 128 15 255 224 0 0 248 62 0 126 0 0 31 3 224 0 62 7 255 255 255 255 128 31 0 0 248 62 0 126 0 0 31 3 224 0 62 7 255 255 255 255 128 31 0 0 248 62 0 126 0 0 31 3 224 0 62 7 255 255 255 255 128 31 0 0 248 62 0 126 0 0 31 3 224 0 62 7 255 255 255 255 128 31 0 0 248 62 0 126 0 0 31 3 224 0 62 7 255 255 255 255 128 31 0 0 7 254 0 127 255 255 224 3 255 248 1 248 62 15 131 240 127 224 0 0 7 254 0 127 255 255 224 3 255 248 1 248 62 15 131 240 127 224 0 0 7 254 0 127 255 255 224 3 255 248 1 248 62 15 131 240 127 224 0 0 7 254 0 127 255 255 224 3 255 248 1 248 62 15 131 240 127 224 0 0 7 254 0 127 255 255 224 3 255 248 1 248 62 15 131 240 127 224 0 0 255 254 15 254 0 124 0 0 31 248 63 255 254 15 255 255 131 224 252 0 255 254 15 254 0 124 0 0 31 248 63 255 254 15 255 255 131 224 252 0 255 254 15 254 0 124 0 0 31 248 63 255 254 15 255 255 131 224 252 0 255 254 15 254 0 124 0 0 31 248 63 255 254 15 255 255 131 224 252 0 255 254 15 254 0 124 0 0 31 248 63 255 254 15 255 255 131 224 252 0 255 254 15 254 0 124 0 0 31 248 63 255 254 15 255 255 131 224 252 0 248 62 15 129 255 131 255 255 224 7 255 248 1 240 127 255 131 224 0 0 248 62 15 129 255 131 255 255 224 7 255 248 1 240 127 255 131 224 0 0 248 62 15 129 255 131 255 255 224 7 255 248 1 240 127 255 131 224 0 0 248 62 15 129 255 131 255 255 224 7 255 248 1 240 127 255 131 224 0 0 248 62 15 129 255 131 255 255 224 7 255 248 1 240 127 255 131 224 0 0 248 62 0 126 15 128 31 252 0 248 0 7 193 255 252 0 0 31 0 0 248 62 0 126 15 128 31 252 0 248 0 7 193 255 252 0 0 31 0 0 248 62 0 126 15 128 31 252 0 248 0 7 193 255 252 0 0 31 0 0 248 62 0 126 15 128 31 252 0 248 0 7 193 255 252 0 0 31 0 0 248 62 0 126 15 128 31 252 0 248 0 7 193 255 252 0 0 31 0 0 248 62 0 1 255 255 255 252 0 7 193 248 63 255 255 255 131 255 252 0 248 62 0 1 255 255 255 252 0 7 193 248 63 255 255 255 131 255 252 0 248 62 0 1 255 255 255 252 0 7 193 248 63 255 255 255 131 255 252 0 248 62 0 1 255 255 255 252 0 7 193 248 63 255 255 255 131 255 252 0 248 62 0 1 255 255 255 252 0 7 193 248 63 255 255 255 131 255 252 0 0 0 0 0 0 124 0 3 255 0 62 7 193 240 0 15 255 255 252 0 0 0 0 0 0 124 0 3 255 0 62 7 193 240 0 15 255 255 252 0 0 0 0 0 0 124 0 3 255 0 62 7 193 240 0 15 255 255 252 0 0 0 0 0 0 124 0 3 255 0 62 7 193 240 0 15 255 255 252 0 0 0 0 0 0 124 0 3 255 0 62 7 193 240 0 15 255 255 252 0 255 255 255 255 240 124 31 0 31 255 254 7 255 240 124 15 255 224 0 0 255 255 255 255 240 124 31 0 31 255 254 7 255 240 124 15 255 224 0 0 255 255 255 255 240 124 31 0 31 255 254 7 255 240 124 15 255 224 0 0 255 255 255 255 240 124 31 0 31 255 254 7 255 240 124 15 255 224 0 0 255 255 255 255 240 124 31 0 31 255 254 7 255 240 124 15 255 224 0 0 248 0 0 1 240 0 0 3 255 7 192 0 63 240 0 15 128 0 0 0 248 0 0 1 240 0 0 3 255 7 192 0 63 240 0 15 128 0 0 0 248 0 0 1 240 0 0 3 255 7 192 0 63 240 0 15 128 0 0 0 248 0 0 1 240 0 0 3 255 7 192 0 63 240 0 15 128 0 0 0 248 0 0 1 240 0 0 3 255 7 192 0 63 240 0 15 128 0 0 0 248 0 0 1 240 0 0 3 255 7 192 0 63 240 0 15 128 0 0 0 248 63 255 129 240 124 0 3 224 248 1 248 1 255 255 255 131 255 252 0 248 63 255 129 240 124 0 3 224 248 1 248 1 255 255 255 131 255 252 0 248 63 255 129 240 124 0 3 224 248 1 248 1 255 255 255 131 255 252 0 248 63 255 129 240 124 0 3 224 248 1 248 1 255 255 255 131 255 252 0 248 63 255 129 240 124 0 3 224 248 1 248 1 255 255 255 131 255 252 0 248 63 255 129 240 127 255 0 0 0 63 255 255 240 0 0 127 255 252 0 248 63 255 129 240 127 255 0 0 0 63 255 255 240 0 0 127 255 252 0 248 63 255 129 240 127 255 0 0 0 63 255 255 240 0 0 127 255 252 0 248 63 255 129 240 127 255 0 0 0 63 255 255 240 0 0 127 255 252 0 248 63 255 129 240 127 255 0 0 0 63 255 255 240 0 0 127 255 252 0 248 63 255 129 240 127 255 255 224 7 255 255 255 255 255 255 255 255 0 0 248 63 255 129 240 127 255 255 224 7 255 255 255 255 255 255 255 255 0 0 248 63 255 129 240 127 255 255 224 7 255 255 255 255 255 255 255 255 0 0 248 63 255 129 240 127 255 255 224 7 255 255 255 255 255 255 255 255 0 0 248 63 255 129 240 127 255 255 224 7 255 255 255 255 255 255 255 255 0 0 248 0 0 1 240 127 255 252 0 248 62 0 1 255 131 240 124 31 0 0 248 0 0 1 240 127 255 252 0 248 62 0 1 255 131 240 124 31 0 0 248 0 0 1 240 127 255 252 0 248 62 0 1 255 131 240 124 31 0 0 248 0 0 1 240 127 255 252 0 248 62 0 1 255 131 240 124 31 0 0 248 0 0 1 240 127 255 252 0 248 62 0 1 255 131 240 124 31 0 0 255 255 255 255 240 124 0 252 0 0 1 255 254 0 127 255 131 224 0 0 255 255 255 255 240 124 0 252 0 0 1 255 254 0 127 255 131 224 0 0 255 255 255 255 240 124 0 252 0 0 1 255 254 0 127 255 131 224 0 0 255 255 255 255 240 124 0 252 0 0 1 255 254 0 127 255 131 224 0 0 255 255 255 255 240 124 0 252 0 0 1 255 254 0 127 255 131 224 0 0 255 255 255 255 240 124 0 252 0 0 1 255 254 0 127 255 131 224 0 0])
]

{ #category : #'instance creation' }
IconFactoryTest >> exampleIconContents [
	^ 'iVBORw0KGgoAAAANSUhEUgAAAJYAAACWAQMAAAAGz+OhAAAABlBMVEX///8AAABVwtN+AAAB
Y0lEQVRIib2WsQ2FMAxEjShSZgRvAoshAmKxn00yQkoKFP9zAhIDOFii4FE4sc9nSBB5TEQ0
OckBbxdZs5NoyCGJuAK+4OnAZtnzqAf44ePiJXViIV0s8ezKiMd0TjT3Ylq/hYkkSsyvmnZm
VRtLPYuLb70YsjugQGX0DjOGRDueUdA38ke7pjFzUTY0i5i0b0E21M+a1bwH5ggaR/jtuZsh
g7BX0jmC/jT0bl8wNGuAD118DvhMFJI903T+Uv3NKsVaU2smxe/qp+zK00JzhrwrqUeoZ2te
tmewagxoGgX1m6DxWlNjhrsVXQeM+hUvkOL1CcMBoHucxuE0mK2j1tSa0eo3VmNF3+Bz3IUN
1URdrAo82kiZsjagmNbmp146sHsvEEvBP8jSdG/M6n7DXhD3g5/eXvcF032O+yb1oafOPVgQ
ZEPX1Ov6MdX4HWTP6n/iI8S2V61Z0waMGkQt6UifsD9ep9m08O+1TQAAAABJRU5ErkJggg=='
]

{ #category : #running }
IconFactoryTest >> setUp [
	factory := IconFactory new
]

{ #category : #running }
IconFactoryTest >> tearDown [
	(self class environment hasClassNamed: #IFTestIcons)
		ifTrue: [ (self class environment at: #IFTestIcons) removeFromSystem ]
]

{ #category : #tests }
IconFactoryTest >> testEnsureClass [
	| cls |
	self deny: (self class environment hasClassNamed: #IFTestIcons).
	cls := factory ensureClassFor: #IFTestIcons.
	self assert: (self class environment hasClassNamed: #IFTestIcons).
	self assert: cls instVarNames equals: #().
	self assert: cls classVarNames equals: #(icons)
]

{ #category : #tests }
IconFactoryTest >> testEnsureClassMethods [
	| cls |
	cls := factory ensureClassFor: #IFTestIcons.
	self assert: cls selectors equals: #().
	self assert: cls class selectors asSet equals: #(icons resetIcons gtInspectorIconsIn:) asSet
]

{ #category : #tests }
IconFactoryTest >> testInvoke [
	| icon expected |
	self testSyncDirectory.
	icon := (self class environment at: #IFTestIcons) myIcon.
	expected := self exampleIcon.
	self assert: icon extent equals: expected extent.
	self assert: icon depth equals: expected depth.
	self assert: icon bits equals: expected bits
]

{ #category : #tests }
IconFactoryTest >> testRemoveFromClass [
	| root cls |
	(root := FileSystem memory / 'icons') ensureCreateDirectory.
	root / 'myIcon.png'
		writeStreamDo: [ :stream | stream nextPutAll: self exampleIconContents ].
	root / 'another.png'
		writeStreamDo: [ :stream | stream nextPutAll: self exampleIconContents ].
	cls := factory ensureClassFor: #IFTestIcons.
	IconFactory loadDirectory: root intoClass: cls.
	(root / 'another.png') ensureDelete.
	IconFactory removeFromClass: cls notInDirectory: root.
	self deny: (cls class selectors includes: #anotherIcon).
	self deny: (cls class selectors includes: #anotherContents).
	self assert: (cls class selectors includes: #myIcon).
	self assert: (cls class selectors includes: #myIconContents)
]

{ #category : #tests }
IconFactoryTest >> testSelectorForName [
	self assert: (factory selectorForName: 'myIcon') equals: 'my'.
	self assert: (factory selectorForName: 'my') equals: 'my'.
	self assert: (factory selectorForName: 'my-image') equals: 'myImage'
]

{ #category : #tests }
IconFactoryTest >> testSyncDirectory [
	| root cls |
	(root := FileSystem memory / 'icons') ensureCreateDirectory.
	Smalltalk image version = 'Pharo6.0'
		ifTrue: [ root / 'myIcon.png'
				writeStreamDo: [ :stream | stream binary nextPutAll: self exampleIconContents base64Decoded asByteArray ] ]
		ifFalse: [ root / 'myIcon.png'
				binaryWriteStreamDo: [ :stream | stream nextPutAll: self exampleIconContents base64Decoded ] ].
	cls := factory ensureClassFor: #IFTestIcons.
	IconFactory syncDirectory: root intoClass: cls.
	self assert: (cls class selectors includes: #myIcon).
	self assert: (cls class selectors includes: #myIconContents)
]
